<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:views="clr-namespace:ImLazy.ControlPanel.Views"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:viewModel="clr-namespace:ImLazy.ControlPanel.ViewModel"
        xmlns:commands="clr-namespace:ImLazy.ControlPanel.Commands"
        xmlns:interactions="clr-namespace:ImLazy.ControlPanel.Interactions"
        x:Class="ImLazy.ControlPanel.MainWindow"
        Title="ImLazy" Height="480" Width="590" MaxWidth="590" MinWidth="590" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <DataTemplate x:Key="FolderItemTemplate" DataType="viewModel:FolderViewModel">
            <Grid Background="Transparent">
                <StackPanel
                    Orientation="Horizontal"
                    Drop="FolderItem_OnDrop"
                    MouseMove="FolderItem_OnMouseMove"
                    PreviewMouseLeftButtonDown="FolderItem_OnPreviewMouseLeftButtonDown">
                    <Image Width="32" Height="32" Source="{Binding Folder.FolderPath, Converter={StaticResource PathToImageConverter}}" />
                    <TextBlock
                        Text="{Binding Folder.FolderPath, Converter={StaticResource ShortPathConverter}}"
                        Foreground="{Binding Exist, Converter={StaticResource BooleanToExistColorConverter}}"/>
                    <TextBlock
        		        Text="{Binding Path=Exist, StringFormat=[{0}], Converter={StaticResource BooleanToExistStringConverter}}"
        		        Foreground="{StaticResource ColorWarnning}"
        		        Visibility="{Binding Exist, Converter={StaticResource InvertBooleanToVisibilityConverter}}" />
                    <TextBlock
        		        Text="{Binding Path=Enabled, StringFormat=[{0}], Converter={StaticResource BooleanToEnableStringConverter}}"
        		        Foreground="{StaticResource ColorWarnning}"
        		        Visibility="{Binding Enabled, Converter={StaticResource InvertBooleanToVisibilityConverter}}" />
                </StackPanel>
                
                <Grid.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Items>
                            <MenuItem
                                Header="{Loc Enable}"
                                Visibility="{Binding Enabled,Converter={StaticResource InvertBooleanToVisibilityConverter}}"
                                Command="{Binding SetEnabledCommand}"
                                CommandParameter="True"/>
                            <MenuItem
                                Header="{Loc Disable}"
                                Visibility="{Binding Enabled,Converter={StaticResource BooleanToVisibilityConverter}}"
                                Command="{Binding SetEnabledCommand}"
                                CommandParameter="False"/>
                        </ContextMenu.Items>
                    </ContextMenu>

                </Grid.ContextMenu>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="RuleItemTempalte" DataType="viewModel:RuleViewModel">
            <Grid Background="Transparent"
                  Drop="RuleViewModel_OnDrop"
                  MouseMove="RuleItem_OnMouseMove"
                  DragOver="RuleListBox_OnDragOver"
                  PreviewMouseLeftButtonDown="RuleItem_OnPreviewMouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}"/>
                    <TextBlock
        				Text="{Binding Path=Enabled, StringFormat=[{0}], Converter={StaticResource BooleanToEnableStringConverter}}"
        				Foreground="{StaticResource ColorWarnning}"
        				Visibility="{Binding Enabled, Converter={StaticResource InvertBooleanToVisibilityConverter}}" />
                </StackPanel>
                <Button Content="..." HorizontalAlignment="Left" Width="15" Grid.Column="1" Style="{StaticResource SimbolButtonStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding EditCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <Binding Mode="OneWay" Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <Grid>
        <TabControl Margin="{StaticResource DefaultMargin}" >
            <TabItem Header="{Loc Rules}">
                <Grid Margin="{StaticResource DefaultMargin}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0.7*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="{Loc Folders}"
						Grid.Column="0">
                        <Grid>
                            <ListBox
								SelectedIndex="0"
								x:Name="FolderListBox"
                                AllowDrop="True"
								ItemsSource="{Binding Folders}"
                                HorizontalContentAlignment="Stretch"
                                ItemTemplate="{StaticResource FolderItemTemplate}"
								Margin="0,0,0,24">
                                <ListBox.Resources>
                                    <interactions:Triggers x:Key="Triggers" x:Shared="False">
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="commands:CommonCommands.ShellExecuteCommand" CommandParameter="{Binding .Folder.FolderPath}"></i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </interactions:Triggers>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="interactions:SupplementaryInteraction.Triggers" Value="{StaticResource Triggers}"></Setter>
                                    </Style>
                                </ListBox.Resources>
                            </ListBox>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <StackPanel.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimbolButtonStyle}">
                                        <Setter Property="Margin" Value="20,0,0,0" />
                                    </Style>
                                </StackPanel.Resources>

                                <Button
								    Content="+" 
								    VerticalAlignment="Bottom"
								    HorizontalAlignment="Left"
                                    Margin="0"
								    Command="{Binding AddFolderCommand}"/>
                                <Button
								    Content="-" 
								    Command="{Binding DeleteFolderCommand}" 
								    CommandParameter="{Binding SelectedItem, ElementName=FolderListBox}"/>
                                <Button
								    Content="-"
								    Command="{Binding WalkthroughCommnad}" 
								    CommandParameter="{Binding SelectedItem, ElementName=FolderListBox}"/>
                                <Button
								    Content="-"
								    Command="{Binding WalkthroughAllCommnad}"/>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="{Loc Rules}"
						Grid.Column="1">
                        <Grid>
                            <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                            <ListBox
								x:Name="RuleListBox"
                                AllowDrop="True"
								ItemsSource="{Binding Rules}" 
								ItemTemplate="{StaticResource RuleItemTempalte}" 
								HorizontalContentAlignment="Stretch" 
								Margin="0,0,0,24"
                                DragOver="RuleListBox_OnDragOver"
								DataContext="{Binding SelectedItem, ElementName=FolderListBox}">
                                <ListBox.Resources>
                                    <interactions:Triggers x:Key="Triggers" x:Shared="False">
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding EditCommand, Mode=OneWay}"/>
                                        </i:EventTrigger>
                                    </interactions:Triggers>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="interactions:SupplementaryInteraction.Triggers" Value="{StaticResource Triggers}"></Setter>
                                    </Style>
                                </ListBox.Resources>
                            </ListBox>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" DataContext="{Binding DataContext, ElementName=RuleListBox}" >
                                <StackPanel.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource SimbolButtonStyle}">
                                        <Setter Property="Margin" Value="20,0,0,0" />
                                    </Style>
                                </StackPanel.Resources>
                                <Button 
                            		Content="+"
                                    Margin="0,0,0,0"
                            		Command="{Binding AddRuleCommand}"/>
                                <Button
                                    Visibility="Collapsed"
                            		Content="..."
                            		Command="{Binding AddFromAllRulesCommand}"/>
                                <Button 
                            		Content="-"
                            		Command="{Binding DeleteRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=RuleListBox}"/>
                                <Button 
                            		Content="↑"
                            		Command="{Binding MoveUpRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=RuleListBox}"/>
                                <Button 
                            		Content="↓"
                            		Command="{Binding MoveDownRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=RuleListBox}"/>
                            </StackPanel>
                        </Grid>
                        <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="{Loc Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <views:AboutView Grid.Column="0" Margin="{StaticResource DefaultMargin}"/>
                    <views:ServiceControlView Grid.Column="1" Margin="{StaticResource DefaultMargin}"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
