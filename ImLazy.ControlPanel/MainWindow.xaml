<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:views="clr-namespace:ImLazy.ControlPanel.Views"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:viewModel="clr-namespace:ImLazy.ControlPanel.ViewModel"
        x:Class="ImLazy.ControlPanel.MainWindow"
        Title="ImLazy" Height="480" Width="590" MaxWidth="590" MinWidth="590" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <DataTemplate x:Key="FolderItemTemplate" DataType="viewModel:FolderViewModel">
            <StackPanel Orientation="Horizontal">
                <Image Width="32" Height="32" Source="{Binding Folder.FolderPath, Converter={StaticResource PathToImageConverter}}"></Image>
                <TextBlock Text="{Binding Folder.FolderPath, Converter={StaticResource ShortPathConverter}}"></TextBlock>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="RuleItemTempalte" DataType="viewModel:RuleViewModel">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}"/>
                    <TextBlock
        				Text="{Binding Path=Enabled, StringFormat=[{0}], Converter={StaticResource BooleanToStringConverter}}"
        				Foreground="{StaticResource ColorWarnning}"
        				Visibility="{Binding Enabled, Converter={StaticResource InvertBooleanToVisibilityConverter}}">
                    </TextBlock>
                </StackPanel>
                <Button Content="..." HorizontalAlignment="Left" Width="15" Grid.Column="1" Style="{StaticResource SimbolButtonStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding EditCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <!--
                It's a little tricky here. The "MouseDoubleClick" event can only be triggered when the InvokeCommandAction
                is attached to a Control (Grid is not a Control). So I used a ContentControl here to act
                as a container for InvokeCommandAction.
                -->
                <ContentControl Grid.Column="0" Content="">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding EditCommand, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ContentControl>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <Binding Mode="OneWay" Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <Grid>
        <TabControl Margin="{StaticResource DefaultMargin}" >
            <TabItem Header="{Loc Rules}">
                <Grid Margin="{StaticResource DefaultMargin}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="0.7*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="{Loc Folders}"
						Grid.Column="0">
                        <Grid>
                            <ListBox
								SelectedIndex="0"
								x:Name="ListBox" 
								ItemsSource="{Binding Folders}"
                                ItemTemplate="{StaticResource FolderItemTemplate}"
								Margin="0,0,0,24"/>
                            <Button
								Content="+" 
								VerticalAlignment="Bottom"
								HorizontalAlignment="Left"
								Command="{Binding AddFolderCommand}"
								Style="{StaticResource SimbolButtonStyle}"/>
                            <Button 
								Margin="40,0,0,0"
								Content="-" 
								VerticalAlignment="Bottom"
								HorizontalAlignment="Left"
								Command="{Binding DeleteFolderCommand}" 
								CommandParameter="{Binding SelectedItem, ElementName=ListBox}"
								Style="{StaticResource SimbolButtonStyle}"/>
                            <Button
								Margin="80,0,0,0"
								Content="-" 
								VerticalAlignment="Bottom"
								HorizontalAlignment="Left"
								Command="{Binding WalkthroughCommnad}" 
								CommandParameter="{Binding SelectedItem, ElementName=ListBox}"
								Style="{StaticResource SimbolButtonStyle}"/>
                            <Button
								Margin="120,0,0,0"
								Content="-" 
								VerticalAlignment="Bottom"
								HorizontalAlignment="Left"
								Command="{Binding WalkthroughAllCommnad}"
								Style="{StaticResource SimbolButtonStyle}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="{Loc Rules}"
						Grid.Column="1">
                        <Grid>
                            <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                            <ListBox
								x:Name="LstRules" 
								ItemsSource="{Binding Rules}" 
								ItemTemplate="{DynamicResource RuleItemTempalte}" 
								HorizontalContentAlignment="Stretch" 
								Margin="0,0,0,24" 
								DataContext="{Binding SelectedItem, ElementName=ListBox}">
                            </ListBox>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                                <Button 
                            		Content="+" 
                            		VerticalAlignment="Bottom"
                            		HorizontalAlignment="Left" 
                            		Command="{Binding AddRuleCommand}"
                            		DataContext="{Binding DataContext, ElementName=LstRules}"
                            		Style="{StaticResource SimbolButtonStyle}"/>
                                <Button 
                            		Content="-" 
                            		VerticalAlignment="Bottom" 
                            		HorizontalAlignment="Left" 
                            		DataContext="{Binding DataContext, ElementName=LstRules}" 
                            		Command="{Binding DeleteRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=LstRules}"
                            		Style="{StaticResource SimbolButtonStyle}" Margin="20,0,0,0"/>
                                <Button 
                            		Content="↑" 
                            		VerticalAlignment="Bottom" 
                            		HorizontalAlignment="Left" 
                            		DataContext="{Binding DataContext, ElementName=LstRules}" 
                            		Command="{Binding MoveUpRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=LstRules}"
                            		Style="{StaticResource SimbolButtonStyle}" Margin="20,0,0,0"/>
                                <Button 
                            		Content="↓" 
                            		VerticalAlignment="Bottom" 
                            		HorizontalAlignment="Left" 
                            		DataContext="{Binding DataContext, ElementName=LstRules}" 
                            		Command="{Binding MoveDownRuleCommand}" 
                            		CommandParameter="{Binding SelectedItem, ElementName=LstRules}"
                            		Style="{StaticResource SimbolButtonStyle}" Margin="20,0,0,0"/>
                            </StackPanel>
                        </Grid>
                        <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="{Loc Settings}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <views:AboutView Grid.Column="0" Margin="{StaticResource DefaultMargin}"/>
                    <views:ServiceControlView Grid.Column="1" Margin="{StaticResource DefaultMargin}"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
